# 汎用的な単一データベース設定

[alembic]
# マイグレーションスクリプトへのパス
script_location = alembic

# マイグレーションファイル名生成用テンプレート；デフォルト値は %%(rev)s_%%(slug)s
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.pathパス、存在する場合はsys.pathの先頭に追加される
prepend_sys_path = .

# マイグレーションファイル内の日付および
# ファイル名をレンダリングする際に使用するタイムゾーン
timezone = UTC

# "slug"フィールドに適用する
# 最大文字数
truncate_slug_length = 40

# 'true'に設定すると、autogenerateに関係なく
# 'revision'コマンド実行時に環境を実行
revision_environment = false

# 'true'に設定すると、ソース.pyファイルがない
# .pycおよび.pyoファイルをversions/ディレクトリ内の
# リビジョンとして検出可能
sourceless = false

# バージョンパスセパレータ；上記のように、これはversion_locationsを
# 分割するために使用される文字です。新しいalembic.iniファイルのデフォルトは
# "os"で、os.pathsepを使用します。このキーを完全に省略すると、
# スペースおよび/またはカンマで分割するレガシー動作にフォールバックします。
version_path_separator = :

# 'true'に設定すると、各"version_locations"ディレクトリ内の
# ソースファイルを再帰的に検索
recursive_version_locations = false

# script.py.makoからリビジョンファイルが
# 書き込まれる際に使用される出力エンコーディング
output_encoding = utf-8

# データベースURL - 環境変数または設定で上書きされる
# This will be overridden by env.py using our application settings
# sqlalchemy.url = postgresql://postgres:password@localhost:5432/fastapi_db
sqlalchemy.url = driver://user:pass@localhost/dbname

[post_write_hooks]
# post_write_hooksは新しく生成されたリビジョンスクリプトに対して
# 実行されるスクリプトまたはPython関数を定義します。
# 詳細と例についてはドキュメントを参照してください

# "black"を使用してフォーマット - console_scriptsランナーを使用し、"black"エントリポイントに対して実行
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# ログ設定
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S 